import json
import sys
from collections import Counter

lang = sys.argv[1]
q_type = sys.argv[2]

who_ids = ['202180318', '201412282', '20434818', '201896545', '201319541', '20968350', '201504902', '20434860', '201480360', '201481479', '201153620', '202240216', '20721825', '20136574', '201590119', '201576603', '20120209', '2066119', '201737889', '201064879', '20757138', '201682449', '201480379', '20710513', '201574002', '201175417', '20863749', '20541680', '201879230', '20878983', '201480314', '20899022', '201156303', '201393567', '201480340', '20306535', '202053173', '20306354', '201056055', '20349766', '201947705', '201407382', '20361310', '2059600', '201347399', '20414500', '20588933', '202107824', '20982537', '20655456', '20953081', '20631544', '2066026', '202042041', '201984153', '20724210', '201504901', '201068413', '201535820', '201640606', '201640605', '201795845', '201030592', '2044518', '201760719', '2066009', '201490980', '2053533', '201593892', '20652734', '202144558', '20818726', '201536211', '201056085', '201175526', '202107808', '20790019', '202119162', '20120208', '202053463', '201889353', '20954135', '201528064', '202223387', '201438578', '20414597', '201737886', '202223189', '201751764', '201481865', '20162317', '201796090', '20361316', '20655122', '20258759', '201896363', '2046421', '201624101', '201347404', '20942886', '201765920', '202107880', '20631953', '201061172', '201766601', '20783521', '20306467', '202262561', '201153290', '20462153', '20210946', '20482488', '202053393', '20258766', '20724191', '201462495', '202231516', '202223163', '201879243', '201056155', '202270987', '202012841', '201037194', '201535799', '20942902', '20942097', '20953094', '201439508', '202053207', '202119161', '20710422', '20414571', '20262704', '201593893', '202180324', '20482489', '202119227', '202240226', '201319540', '20245907', '201766542', '201080500', '202180318', '201412282', '20434818', '201896545', '201319541', '20968350', '201504902', '20434860', '201480360', '201481479', '201153620', '202240216', '20721825', '20136574', '201590119', '201576603', '20120209', '2066119', '201737889', '201064879', '20757138', '201682449', '201480379', '20710513', '201574002', '201175417', '20863749', '20541680', '201879230', '20878983', '201480314', '20899022', '201156303', '201393567', '201480340', '20306535', '202053173', '20306354', '201056055', '20349766', '201947705', '201407382', '20361310', '2059600', '201347399', '20414500', '20588933', '202107824', '20982537', '20655456', '20953081', '20631544', '2066026', '202042041', '201984153', '20724210', '201504901', '201068413', '201535820', '201640606', '201640605', '201795845', '201030592', '2044518', '201760719', '2066009', '201490980', '2053533', '201593892', '20652734', '202144558', '20818726', '201536211', '201056085', '201175526', '202107808', '20790019', '202119162', '20120208', '202053463', '201889353', '20954135', '201528064', '202223387', '201438578', '20414597', '201737886', '202223189', '201751764', '201481865', '20162317', '201796090', '20361316', '20655122', '20258759', '201896363', '2046421', '201624101', '201347404', '20942886', '201765920', '202107880', '20631953', '201061172', '201766601', '20783521', '20306467', '202262561', '201153290', '20462153', '20210946', '20482488', '202053393', '20258766', '20724191', '201462495', '202231516', '202223163', '201879243', '201056155', '202270987', '202012841', '201037194', '201535799', '20942902', '20942097', '20953094', '201439508', '202053207', '202119161', '20710422', '20414571', '20262704', '201593893', '202180324', '20482489', '202119227', '202240226', '201319540', '20245907', '201766542', '201080500', '201951730', '201430870', '201996813', '20452282', '201770835', '20452121', '20567751', '201880341', '201480360', '201065442', '201751873', '201185702', '201947744', '20573505', '201621472', '20411634', '20721825', '20797694', '20667875', '202169071', '201504922', '201737889', '20706128', '201639232', '201510327', '201574002', '202262746', '202100332', '202003760', '20385288', '201455942', '201574224', '2053901', '202228116', '20940010', '20287937', '20856684', '201982132', '202081301', '201407382', '201302044', '201859611', '201951705', '202156899', '201528130', '20827496', '201444981', '20953081', '20836453', '202285228', '201763610', '201535713', '201641425', '20247647', '201504901', '201908992', '202100470', '20741157', '201393738', '201795862', '201235536', '201982874', '201573888', '201400148', '20637261', '20655214', '202218650', '201490980', '202125904', '201952898', '20940364', '20710052', '202244087', '201037135', '201758063', '201556581', '201641387', '202223308', '20541514', '20120208', '201889353', '201207355', '20518747', '201738961', '20473010', '202258184', '201974797', '201055998', '202240718', '202024817', '201982425', '201935797', '20609240', '201760639', '20631665', '20857161', '201752784', '2046421', '201624101', '201975120', '201832647', '20177866', '202012405', '202246542', '20482414', '201795454', '201878404', '20411813', '202285579', '20462153', '20306387', '20482488', '201056001', '20609321', '20427509', '2046712', '202006199', '201047306', '20340769', '20480753', '20667642', '201065075', '20657080', '20306515', '201804720', '20492078', '201988024', '20489533', '20856767', '2076503', '202053207', '201639410', '20602944', '20644732', '20182778', '20783238', '201859637', '20836421', '201030375', '201988085', '20894309', '20412546']

if q_type == "compare":
    n = 589
else:
    n = 1000

# base_file = f"results_perceptual_{q_type}/xgqa_pangea_{lang}_{q_type}_{n}_translated.json"
# img_rnd_file = f"results_perceptual_{q_type}/xgqa_pangea_{lang}_{q_type}_{n}_img_rnd_translated.json"
# text_rnd_file = f"results_perceptual_{q_type}/xgqa_pangea_{lang}_{q_type}_{n}_text_rnd_translated.json"

base_file = f"results_ov_perceptual_{q_type}/xgqa_llava_onevision_{lang}_{q_type}_{n}_translated.json"
img_rnd_file = f"results_ov_perceptual_{q_type}/xgqa_llava_onevision_{lang}_{q_type}_{n}_img_rnd_translated.json"
text_rnd_file = f"results_ov_perceptual_{q_type}/xgqa_llava_onevision_{lang}_{q_type}_{n}_text_rnd_translated.json"

if lang == "en":
    base_file = base_file.replace("_translated", "")
    img_rnd_file = img_rnd_file.replace("_translated", "")
    text_rnd_file = text_rnd_file.replace("_translated", "")

def count_preds(file_name):
    with open(file_name, "r") as f:
        results = json.load(f)

    preds = []
    answers = []
    for sample_id, result in results.items():
        pred = result["translated_prediction"] if result["translated_prediction"] != "" else result["prediction"]
        pred = pred.lower().rstrip(".")
        if q_type == "verify" or q_type == "logical":
            if "yes" in pred:
                pred = "yes"
            elif "no" in pred:
                pred = "no"
            else:
                pred = "other"

        elif q_type == "choose":
            if "right" in pred:
                pred = "right"
            elif "left" in pred:
                pred = "left"
            else:
                continue
        
        elif q_type == "query":
            if sample_id not in who_ids:
                continue
            if "woman" in pred or "women" in pred:
                pred = "woman"
            elif "man" in pred or "men" in pred:
                pred = "man"
            else:
                continue
        preds.append(pred)
        answers.append(result["correct_answer"])

    return dict(Counter(preds)), dict(Counter(answers))

count_base, count_answers = count_preds(base_file)
count_img_rnd, _ = count_preds(img_rnd_file)
count_text_rnd, _ = count_preds(text_rnd_file)

count_answers = dict(sorted(count_answers.items(), key=lambda item: item[1], reverse=True))
count_base = dict(sorted(count_base.items(), key=lambda item: item[1], reverse=True))
count_img_rnd = dict(sorted(count_img_rnd.items(), key=lambda item: item[1], reverse=True))
count_text_rnd = dict(sorted(count_text_rnd.items(), key=lambda item: item[1], reverse=True))

print(f"\nAnswers: {count_answers}, count: {sum(count_answers.values())}")
print(f"\nBase: {count_base}")
print(f"\nImg rnd: {count_img_rnd}")
print(f"\nText rnd: {count_text_rnd}")